{"ast":null,"code":"// actions.js\n\nimport axios from 'axios';\nimport { LOGIN_USER_REQUEST, LOGIN_USER_SUCCESS, LOGIN_USER_FAILURE } from './action_types';\nimport { useNavigate } from 'react-router';\nexport const loginRequest = () => ({\n  type: LOGIN_USER_REQUEST\n});\nexport const loginSuccess = token => ({\n  type: LOGIN_USER_SUCCESS,\n  payload: token\n});\nexport const loginFailure = error => ({\n  type: LOGIN_USER_FAILURE,\n  payload: error\n});\nexport const loginUser = (email, password) => {\n  var _s = $RefreshSig$();\n  return _s(async dispatch => {\n    _s();\n    dispatch(loginRequest());\n    const navigate = useNavigate();\n    try {\n      const loginData = {\n        email,\n        password\n      };\n      const response = await axios.post(\"http://localhost:1213/user/login-user\", loginData);\n      if (response.status === 200) {\n        const token = response.data.token;\n        localStorage.setItem(\"userToken\", token);\n        dispatch(loginSuccess(token));\n        nav;\n        // You can dispatch further actions or navigate to another page here.\n      } else {\n        dispatch(loginFailure(response.data.error));\n      }\n    } catch (error) {\n      if (error.response) {\n        const errorMessage = error.response.data.error;\n        dispatch(loginFailure(errorMessage));\n      } else if (error.request) {\n        dispatch(loginFailure(\"No response received from the server.\"));\n      } else {\n        dispatch(loginFailure(error.message));\n      }\n    }\n  }, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n    return [useNavigate];\n  });\n};","map":{"version":3,"names":["axios","LOGIN_USER_REQUEST","LOGIN_USER_SUCCESS","LOGIN_USER_FAILURE","useNavigate","loginRequest","type","loginSuccess","token","payload","loginFailure","error","loginUser","email","password","_s","$RefreshSig$","dispatch","navigate","loginData","response","post","status","data","localStorage","setItem","nav","errorMessage","request","message"],"sources":["/Users/apple/Documents/Ecommerce/client/src/actions/user_login_actions.js"],"sourcesContent":["// actions.js\n\nimport axios from 'axios';\nimport {\n    LOGIN_USER_REQUEST,\n    LOGIN_USER_SUCCESS,\n    LOGIN_USER_FAILURE,\n  } from './action_types';\nimport { useNavigate } from 'react-router';\n\nexport const loginRequest = () => ({\n  type: LOGIN_USER_REQUEST,\n});\n\nexport const loginSuccess = (token) => ({\n  type: LOGIN_USER_SUCCESS,\n  payload: token,\n});\n\nexport const loginFailure = (error) => ({\n  type: LOGIN_USER_FAILURE,\n  payload: error,\n});\n\nexport const loginUser = (email, password) => async (dispatch) => {\n  dispatch(loginRequest());\n  const navigate = useNavigate()\n\n  try {\n    const loginData = {\n      email,\n      password,\n    };\n\n    const response = await axios.post(\n      \"http://localhost:1213/user/login-user\",\n      loginData\n    );\n\n    if (response.status === 200) {\n      const token = response.data.token;\n      localStorage.setItem(\"userToken\", token);\n      dispatch(loginSuccess(token));\n      nav\n      // You can dispatch further actions or navigate to another page here.\n    } else {\n      dispatch(loginFailure(response.data.error));\n    }\n  } catch (error) {\n    if (error.response) {\n      const errorMessage = error.response.data.error;\n      dispatch(loginFailure(errorMessage));\n    } else if (error.request) {\n      dispatch(loginFailure(\"No response received from the server.\"));\n    } else {\n      dispatch(loginFailure(error.message));\n    }\n  }\n};\n"],"mappings":"AAAA;;AAEA,OAAOA,KAAK,MAAM,OAAO;AACzB,SACIC,kBAAkB,EAClBC,kBAAkB,EAClBC,kBAAkB,QACb,gBAAgB;AACzB,SAASC,WAAW,QAAQ,cAAc;AAE1C,OAAO,MAAMC,YAAY,GAAGA,CAAA,MAAO;EACjCC,IAAI,EAAEL;AACR,CAAC,CAAC;AAEF,OAAO,MAAMM,YAAY,GAAIC,KAAK,KAAM;EACtCF,IAAI,EAAEJ,kBAAkB;EACxBO,OAAO,EAAED;AACX,CAAC,CAAC;AAEF,OAAO,MAAME,YAAY,GAAIC,KAAK,KAAM;EACtCL,IAAI,EAAEH,kBAAkB;EACxBM,OAAO,EAAEE;AACX,CAAC,CAAC;AAEF,OAAO,MAAMC,SAAS,GAAGA,CAACC,KAAK,EAAEC,QAAQ;EAAA,IAAAC,EAAA,GAAAC,YAAA;EAAA,OAAAD,EAAA,CAAK,MAAOE,QAAQ,IAAK;IAAAF,EAAA;IAChEE,QAAQ,CAACZ,YAAY,CAAC,CAAC,CAAC;IACxB,MAAMa,QAAQ,GAAGd,WAAW,CAAC,CAAC;IAE9B,IAAI;MACF,MAAMe,SAAS,GAAG;QAChBN,KAAK;QACLC;MACF,CAAC;MAED,MAAMM,QAAQ,GAAG,MAAMpB,KAAK,CAACqB,IAAI,CAC/B,uCAAuC,EACvCF,SACF,CAAC;MAED,IAAIC,QAAQ,CAACE,MAAM,KAAK,GAAG,EAAE;QAC3B,MAAMd,KAAK,GAAGY,QAAQ,CAACG,IAAI,CAACf,KAAK;QACjCgB,YAAY,CAACC,OAAO,CAAC,WAAW,EAAEjB,KAAK,CAAC;QACxCS,QAAQ,CAACV,YAAY,CAACC,KAAK,CAAC,CAAC;QAC7BkB,GAAG;QACH;MACF,CAAC,MAAM;QACLT,QAAQ,CAACP,YAAY,CAACU,QAAQ,CAACG,IAAI,CAACZ,KAAK,CAAC,CAAC;MAC7C;IACF,CAAC,CAAC,OAAOA,KAAK,EAAE;MACd,IAAIA,KAAK,CAACS,QAAQ,EAAE;QAClB,MAAMO,YAAY,GAAGhB,KAAK,CAACS,QAAQ,CAACG,IAAI,CAACZ,KAAK;QAC9CM,QAAQ,CAACP,YAAY,CAACiB,YAAY,CAAC,CAAC;MACtC,CAAC,MAAM,IAAIhB,KAAK,CAACiB,OAAO,EAAE;QACxBX,QAAQ,CAACP,YAAY,CAAC,uCAAuC,CAAC,CAAC;MACjE,CAAC,MAAM;QACLO,QAAQ,CAACP,YAAY,CAACC,KAAK,CAACkB,OAAO,CAAC,CAAC;MACvC;IACF;EACF,CAAC;IAAA,QAhCkBzB,WAAW;EAAA;AAAA,CAgC7B"},"metadata":{},"sourceType":"module","externalDependencies":[]}