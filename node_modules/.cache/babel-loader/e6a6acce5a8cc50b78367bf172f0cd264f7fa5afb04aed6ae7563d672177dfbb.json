{"ast":null,"code":"import { REGISTER_USER_REQUEST, REGISTER_USER_FAILURE, REGISTER_USER_SUCCESS } from \"./action_types\";\nimport axios from 'axios';\nconst sellerRegisterAction = userData => async dispatch => {\n  try {\n    dispatch({\n      type: REGISTER_USER_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-type': 'application/json'\n      }\n    };\n    const response = await axios.post(\"http://localhost:1213/seller/register-seller\", userData, config);\n    dispatch({\n      type: REGISTER_USER_SUCCESS\n    });\n    console.log(response.data.message);\n  } catch (error) {\n    console.log(\"Error response from server:\", error);\n    let errorMessage = \"An error occurred\"; // Default error message\n\n    if (error.response && error.response.data.error) {\n      errorMessage = error.response.data.error; // Use the error message from the server if available\n    }\n\n    dispatch({\n      type: REGISTER_USER_FAILURE,\n      payload: errorMessage\n    });\n  }\n};\nexport default sellerRegisterAction;","map":{"version":3,"names":["REGISTER_USER_REQUEST","REGISTER_USER_FAILURE","REGISTER_USER_SUCCESS","axios","sellerRegisterAction","userData","dispatch","type","config","headers","response","post","console","log","data","message","error","errorMessage","payload"],"sources":["/Users/apple/Documents/Ecommerce/client/src/actions/selller_register_actions.js"],"sourcesContent":["import { REGISTER_USER_REQUEST, REGISTER_USER_FAILURE, REGISTER_USER_SUCCESS } from \"./action_types\";\nimport axios from 'axios';\n\nconst sellerRegisterAction = (userData) => async (dispatch) => {\n  try {\n    dispatch({ type: REGISTER_USER_REQUEST });\n    const config = {\n      headers: {\n        'Content-type': 'application/json',\n      },\n    };\n\n    const response = await axios.post(\"http://localhost:1213/seller/register-seller\", userData, config);\n    dispatch({ type: REGISTER_USER_SUCCESS });\n    console.log(response.data.message);\n\n  } catch (error) {\n    console.log(\"Error response from server:\", error);\n    let errorMessage = \"An error occurred\"; // Default error message\n\n    if (error.response && error.response.data.error) {\n      errorMessage = error.response.data.error; // Use the error message from the server if available\n    }\n\n    dispatch({ type: REGISTER_USER_FAILURE, payload: errorMessage });\n  }\n};\n\nexport default sellerRegisterAction;\n"],"mappings":"AAAA,SAASA,qBAAqB,EAAEC,qBAAqB,EAAEC,qBAAqB,QAAQ,gBAAgB;AACpG,OAAOC,KAAK,MAAM,OAAO;AAEzB,MAAMC,oBAAoB,GAAIC,QAAQ,IAAK,MAAOC,QAAQ,IAAK;EAC7D,IAAI;IACFA,QAAQ,CAAC;MAAEC,IAAI,EAAEP;IAAsB,CAAC,CAAC;IACzC,MAAMQ,MAAM,GAAG;MACbC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB;IACF,CAAC;IAED,MAAMC,QAAQ,GAAG,MAAMP,KAAK,CAACQ,IAAI,CAAC,8CAA8C,EAAEN,QAAQ,EAAEG,MAAM,CAAC;IACnGF,QAAQ,CAAC;MAAEC,IAAI,EAAEL;IAAsB,CAAC,CAAC;IACzCU,OAAO,CAACC,GAAG,CAACH,QAAQ,CAACI,IAAI,CAACC,OAAO,CAAC;EAEpC,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdJ,OAAO,CAACC,GAAG,CAAC,6BAA6B,EAAEG,KAAK,CAAC;IACjD,IAAIC,YAAY,GAAG,mBAAmB,CAAC,CAAC;;IAExC,IAAID,KAAK,CAACN,QAAQ,IAAIM,KAAK,CAACN,QAAQ,CAACI,IAAI,CAACE,KAAK,EAAE;MAC/CC,YAAY,GAAGD,KAAK,CAACN,QAAQ,CAACI,IAAI,CAACE,KAAK,CAAC,CAAC;IAC5C;;IAEAV,QAAQ,CAAC;MAAEC,IAAI,EAAEN,qBAAqB;MAAEiB,OAAO,EAAED;IAAa,CAAC,CAAC;EAClE;AACF,CAAC;AAED,eAAeb,oBAAoB"},"metadata":{},"sourceType":"module","externalDependencies":[]}