{"ast":null,"code":"import { VERIFY_OTP_REQUEST, VERIFY_OTP_FAILURE, VERIFY_OTP_SUCCESS } from \"./action_types\";\nimport axios from 'axios';\nconst verifyOtpAction = (userEmail, otpValue, navigate) => async dispatch => {\n  try {\n    dispatch({\n      type: VERIFY_OTP_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-type': 'application/json'\n      }\n    };\n    const response = await axios.post(\"http://localhost:1213/user/verify-otp\", {\n      email: userEmail,\n      otp: otpValue\n    }, config);\n    dispatch({\n      type: VERIFY_OTP_SUCCESS,\n      payload: response\n    });\n    navigate(\"/user-register\");\n  } catch (error) {\n    console.log(\"Error response from server:\", error.response.data.error);\n    let errorMessage = \"An error occurred\"; // Default error message\n\n    if (error.response && error.response.data.error) {\n      errorMessage = error.response.data.error; // Use the error message from the server if available\n    }\n\n    dispatch({\n      type: VERIFY_OTP_FAILURE,\n      payload: errorMessage\n    });\n  }\n};\nexport default verifyOtpAction;","map":{"version":3,"names":["VERIFY_OTP_REQUEST","VERIFY_OTP_FAILURE","VERIFY_OTP_SUCCESS","axios","verifyOtpAction","userEmail","otpValue","navigate","dispatch","type","config","headers","response","post","email","otp","payload","error","console","log","data","errorMessage"],"sources":["/Users/apple/Documents/Ecommerce/client/src/actions/verify_otp_action.js"],"sourcesContent":["import {\n    VERIFY_OTP_REQUEST,\n    VERIFY_OTP_FAILURE,\n    VERIFY_OTP_SUCCESS,\n  } from \"./action_types\";\n  import axios from 'axios';\n  \n  const verifyOtpAction = (userEmail, otpValue, navigate) => async (dispatch) => {\n  \n    try {\n      dispatch({ type: VERIFY_OTP_REQUEST });\n      const config = {\n        headers: {\n          'Content-type': 'application/json',\n        },\n      };\n  \n      const response = await axios.post(\"http://localhost:1213/user/verify-otp\", {\n        email: userEmail,\n        otp: otpValue,\n      }, config);\n      \n      dispatch({ type: VERIFY_OTP_SUCCESS, payload: response });\n      \n      navigate(\"/user-register\")\n    } catch (error) {\n      console.log(\"Error response from server:\", error.response.data.error);\n      let errorMessage = \"An error occurred\"; // Default error message\n  \n      if (error.response && error.response.data.error) {\n        errorMessage = error.response.data.error; // Use the error message from the server if available\n      }\n  \n      dispatch({ type: VERIFY_OTP_FAILURE, payload: errorMessage });\n    }\n  };\n  \n  export default verifyOtpAction;\n  "],"mappings":"AAAA,SACIA,kBAAkB,EAClBC,kBAAkB,EAClBC,kBAAkB,QACb,gBAAgB;AACvB,OAAOC,KAAK,MAAM,OAAO;AAEzB,MAAMC,eAAe,GAAGA,CAACC,SAAS,EAAEC,QAAQ,EAAEC,QAAQ,KAAK,MAAOC,QAAQ,IAAK;EAE7E,IAAI;IACFA,QAAQ,CAAC;MAAEC,IAAI,EAAET;IAAmB,CAAC,CAAC;IACtC,MAAMU,MAAM,GAAG;MACbC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB;IACF,CAAC;IAED,MAAMC,QAAQ,GAAG,MAAMT,KAAK,CAACU,IAAI,CAAC,uCAAuC,EAAE;MACzEC,KAAK,EAAET,SAAS;MAChBU,GAAG,EAAET;IACP,CAAC,EAAEI,MAAM,CAAC;IAEVF,QAAQ,CAAC;MAAEC,IAAI,EAAEP,kBAAkB;MAAEc,OAAO,EAAEJ;IAAS,CAAC,CAAC;IAEzDL,QAAQ,CAAC,gBAAgB,CAAC;EAC5B,CAAC,CAAC,OAAOU,KAAK,EAAE;IACdC,OAAO,CAACC,GAAG,CAAC,6BAA6B,EAAEF,KAAK,CAACL,QAAQ,CAACQ,IAAI,CAACH,KAAK,CAAC;IACrE,IAAII,YAAY,GAAG,mBAAmB,CAAC,CAAC;;IAExC,IAAIJ,KAAK,CAACL,QAAQ,IAAIK,KAAK,CAACL,QAAQ,CAACQ,IAAI,CAACH,KAAK,EAAE;MAC/CI,YAAY,GAAGJ,KAAK,CAACL,QAAQ,CAACQ,IAAI,CAACH,KAAK,CAAC,CAAC;IAC5C;;IAEAT,QAAQ,CAAC;MAAEC,IAAI,EAAER,kBAAkB;MAAEe,OAAO,EAAEK;IAAa,CAAC,CAAC;EAC/D;AACF,CAAC;AAED,eAAejB,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}