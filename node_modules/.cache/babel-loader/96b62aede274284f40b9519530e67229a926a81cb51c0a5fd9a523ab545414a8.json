{"ast":null,"code":"import { GET_PRODUCTS_BY_SELLER_REQUEST, GET_PRODUCTS_BY_SELLER_SUCCESS, GET_PRODUCTS_BY_SELLER_FAILURE } from './action_types';\nimport axios from 'axios';\nconst getProductsBySellerAction = sellerUsername => async dispatch => {\n  try {\n    dispatch({\n      type: GET_PRODUCTS_BY_SELLER_REQUEST\n    });\n    const response = await axios.get(`http://localhost:1213/product/get-products/${sellerUsername}`);\n    dispatch({\n      type: GET_PRODUCTS_BY_SELLER_SUCCESS,\n      payload: response.data\n    });\n  } catch (error) {\n    console.error('Error fetching products:', error);\n    dispatch({\n      type: GET_PRODUCTS_BY_SELLER_FAILURE,\n      payload: error.response && error.response.data.message ? error.response.data.message : 'An error occurred'\n    });\n  }\n};\nexport default getProductsBySellerAction;","map":{"version":3,"names":["GET_PRODUCTS_BY_SELLER_REQUEST","GET_PRODUCTS_BY_SELLER_SUCCESS","GET_PRODUCTS_BY_SELLER_FAILURE","axios","getProductsBySellerAction","sellerUsername","dispatch","type","response","get","payload","data","error","console","message"],"sources":["/Users/apple/Documents/Ecommerce/client/src/actions/get_products_by_seller_action.js"],"sourcesContent":["import {\n    GET_PRODUCTS_BY_SELLER_REQUEST,\n    GET_PRODUCTS_BY_SELLER_SUCCESS,\n    GET_PRODUCTS_BY_SELLER_FAILURE,\n  } from  './action_types';\n  import axios from 'axios';\n  \n  const getProductsBySellerAction = (sellerUsername) => async (dispatch) => {\n    try {\n      dispatch({ type: GET_PRODUCTS_BY_SELLER_REQUEST });\n      const response = await axios.get(`http://localhost:1213/product/get-products/${sellerUsername}`);\n      dispatch({ type: GET_PRODUCTS_BY_SELLER_SUCCESS, payload: response.data });\n    } catch (error) {\n      console.error('Error fetching products:', error);\n  \n      dispatch({\n        type: GET_PRODUCTS_BY_SELLER_FAILURE,\n        payload: error.response && error.response.data.message ? error.response.data.message : 'An error occurred',\n      });\n    }\n  };\n  \n  export default getProductsBySellerAction;"],"mappings":"AAAA,SACIA,8BAA8B,EAC9BC,8BAA8B,EAC9BC,8BAA8B,QACxB,gBAAgB;AACxB,OAAOC,KAAK,MAAM,OAAO;AAEzB,MAAMC,yBAAyB,GAAIC,cAAc,IAAK,MAAOC,QAAQ,IAAK;EACxE,IAAI;IACFA,QAAQ,CAAC;MAAEC,IAAI,EAAEP;IAA+B,CAAC,CAAC;IAClD,MAAMQ,QAAQ,GAAG,MAAML,KAAK,CAACM,GAAG,CAAE,8CAA6CJ,cAAe,EAAC,CAAC;IAChGC,QAAQ,CAAC;MAAEC,IAAI,EAAEN,8BAA8B;MAAES,OAAO,EAAEF,QAAQ,CAACG;IAAK,CAAC,CAAC;EAC5E,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IAEhDN,QAAQ,CAAC;MACPC,IAAI,EAAEL,8BAA8B;MACpCQ,OAAO,EAAEE,KAAK,CAACJ,QAAQ,IAAII,KAAK,CAACJ,QAAQ,CAACG,IAAI,CAACG,OAAO,GAAGF,KAAK,CAACJ,QAAQ,CAACG,IAAI,CAACG,OAAO,GAAG;IACzF,CAAC,CAAC;EACJ;AACF,CAAC;AAED,eAAeV,yBAAyB"},"metadata":{},"sourceType":"module","externalDependencies":[]}