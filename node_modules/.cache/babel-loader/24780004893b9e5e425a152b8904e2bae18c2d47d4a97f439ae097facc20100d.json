{"ast":null,"code":"// // actions.js\n// import axios from 'axios';\n// import {\n//     LOGIN_USER_REQUEST,\n//     LOGIN_USER_SUCCESS,\n//     LOGIN_USER_FAILURE,\n//   } from './action_types';\n// import { useNavigate } from 'react-router';\n\n// // export const loginRequest = () => ({\n// //   type: LOGIN_USER_REQUEST,\n// // });\n\n// // export const loginSuccess = (token) => ({\n// //   type: LOGIN_USER_SUCCESS,\n// //   payload: token,\n// // });\n\n// // export const loginFailure = (error) => ({\n// //   type: LOGIN_USER_FAILURE,\n// //   payload: error,\n// // });\n\n// export const loginUser = (email, password) => async (dispatch) => {\n\n//   try {\n//     const loginData = {\n//       email,\n//       password,\n//     };\n//     dispatch(loginRequest());\n//     const navigate = useNavigate()\n\n//     const response = await axios.post(\n//       \"http://localhost:1213/user/login-user\",\n//       loginData\n//     );\n\n//     if (response.status === 200) {\n//       const token = response.data.token;\n//       localStorage.setItem(\"userToken\", token);\n//       dispatch(loginSuccess(token));\n//       navigate(\"/\")\n//     } else {\n//       dispatch(loginFailure(response.data.error));\n//     }\n//   } catch (error) {\n//     if (error.response) {\n//       const errorMessage = error.response.data.error;\n//       dispatch(loginFailure(errorMessage));\n//     } else if (error.request) {\n//       dispatch(loginFailure(\"No response received from the server.\"));\n//     } else {\n//       dispatch(loginFailure(error.message));\n//     }\n//   }\n// };\n\nimport { LOGIN_USER_FAILURE, LOGIN_USER_REQUEST, LOGIN_USER_SUCCESS } from \"../actions/action_types\";\nimport axios from \"axios\";\nconst loginUser = (email, password) => async dispatch => {\n  try {\n    dispatch({\n      type: LOGIN_USER_REQUEST\n    });\n    const config = {\n      headers: {}\n    };\n  } catch (error) {}\n};\nexport default loginUser;","map":{"version":3,"names":["LOGIN_USER_FAILURE","LOGIN_USER_REQUEST","LOGIN_USER_SUCCESS","axios","loginUser","email","password","dispatch","type","config","headers","error"],"sources":["/Users/apple/Documents/Ecommerce/client/src/actions/user_login_actions.js"],"sourcesContent":["// // actions.js\n// import axios from 'axios';\n// import {\n//     LOGIN_USER_REQUEST,\n//     LOGIN_USER_SUCCESS,\n//     LOGIN_USER_FAILURE,\n//   } from './action_types';\n// import { useNavigate } from 'react-router';\n\n// // export const loginRequest = () => ({\n// //   type: LOGIN_USER_REQUEST,\n// // });\n\n// // export const loginSuccess = (token) => ({\n// //   type: LOGIN_USER_SUCCESS,\n// //   payload: token,\n// // });\n\n// // export const loginFailure = (error) => ({\n// //   type: LOGIN_USER_FAILURE,\n// //   payload: error,\n// // });\n\n// export const loginUser = (email, password) => async (dispatch) => {\n  \n//   try {\n//     const loginData = {\n//       email,\n//       password,\n//     };\n//     dispatch(loginRequest());\n//     const navigate = useNavigate()\n\n//     const response = await axios.post(\n//       \"http://localhost:1213/user/login-user\",\n//       loginData\n//     );\n\n//     if (response.status === 200) {\n//       const token = response.data.token;\n//       localStorage.setItem(\"userToken\", token);\n//       dispatch(loginSuccess(token));\n//       navigate(\"/\")\n//     } else {\n//       dispatch(loginFailure(response.data.error));\n//     }\n//   } catch (error) {\n//     if (error.response) {\n//       const errorMessage = error.response.data.error;\n//       dispatch(loginFailure(errorMessage));\n//     } else if (error.request) {\n//       dispatch(loginFailure(\"No response received from the server.\"));\n//     } else {\n//       dispatch(loginFailure(error.message));\n//     }\n//   }\n// };\n\n\nimport { LOGIN_USER_FAILURE,LOGIN_USER_REQUEST,LOGIN_USER_SUCCESS } from \"../actions/action_types\";\nimport axios from \"axios\"\n\nconst loginUser= (email,password)=>async(dispatch)=>{\n  try {\n      dispatch({type:LOGIN_USER_REQUEST})\n      const config = {\n        headers:{\n          \n        }\n      }\n\n  } catch (error) {\n    \n  }\n}\nexport default loginUser"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,SAASA,kBAAkB,EAACC,kBAAkB,EAACC,kBAAkB,QAAQ,yBAAyB;AAClG,OAAOC,KAAK,MAAM,OAAO;AAEzB,MAAMC,SAAS,GAAEA,CAACC,KAAK,EAACC,QAAQ,KAAG,MAAMC,QAAQ,IAAG;EAClD,IAAI;IACAA,QAAQ,CAAC;MAACC,IAAI,EAACP;IAAkB,CAAC,CAAC;IACnC,MAAMQ,MAAM,GAAG;MACbC,OAAO,EAAC,CAER;IACF,CAAC;EAEL,CAAC,CAAC,OAAOC,KAAK,EAAE,CAEhB;AACF,CAAC;AACD,eAAeP,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}