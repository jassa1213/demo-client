{"ast":null,"code":"import { REGISTER_USER_REQUEST, REGISTER_USER_FAILURE, REGISTER_USER_SUCCESS } from \"./action_types\";\nimport axios from 'axios';\nimport { useNavigate } from \"react-router-dom\";\nconst sellerRegisterAction = userData => {\n  var _s = $RefreshSig$();\n  return _s(async dispatch => {\n    _s();\n    const navigate = useNavigate();\n    try {\n      dispatch({\n        type: REGISTER_USER_REQUEST\n      });\n      const config = {\n        headers: {\n          'Content-type': 'application/json'\n        }\n      };\n      const response = await axios.post(\"http://localhost:1213/seller/register-seller\", userData, config);\n      dispatch({\n        type: REGISTER_USER_SUCCESS\n      });\n      navigate(\"/user-register\");\n      console.log(response.data.message);\n\n      // You can handle success behavior, such as redirecting the user.\n    } catch (error) {\n      console.log(\"Error response from server:\", error);\n      let errorMessage = \"An error occurred\"; // Default error message\n\n      if (error.response && error.response.data.error) {\n        errorMessage = error.response.data.error; // Use the error message from the server if available\n      }\n\n      dispatch({\n        type: REGISTER_USER_FAILURE,\n        payload: errorMessage\n      });\n    }\n  }, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n    return [useNavigate];\n  });\n};\nexport default sellerRegisterAction;","map":{"version":3,"names":["REGISTER_USER_REQUEST","REGISTER_USER_FAILURE","REGISTER_USER_SUCCESS","axios","useNavigate","sellerRegisterAction","userData","_s","$RefreshSig$","dispatch","navigate","type","config","headers","response","post","console","log","data","message","error","errorMessage","payload"],"sources":["/Users/apple/Documents/Ecommerce/client/src/actions/selller_register_actions.js"],"sourcesContent":["import { REGISTER_USER_REQUEST, REGISTER_USER_FAILURE, REGISTER_USER_SUCCESS } from \"./action_types\";\nimport axios from 'axios';\nimport {useNavigate} from \"react-router-dom\"\n\nconst sellerRegisterAction = (userData) => async (dispatch) => {\n  const navigate = useNavigate()\n  try {\n    dispatch({ type: REGISTER_USER_REQUEST });\n    const config = {\n      headers: {\n        'Content-type': 'application/json',\n      },\n    };\n\n    const response = await axios.post(\"http://localhost:1213/seller/register-seller\", userData, config);\n    dispatch({ type: REGISTER_USER_SUCCESS });\n    navigate(\"/user-register\")\n    console.log(response.data.message);\n\n    // You can handle success behavior, such as redirecting the user.\n\n  } catch (error) {\n    console.log(\"Error response from server:\", error);\n    let errorMessage = \"An error occurred\"; // Default error message\n\n    if (error.response && error.response.data.error) {\n      errorMessage = error.response.data.error; // Use the error message from the server if available\n    }\n\n    dispatch({ type: REGISTER_USER_FAILURE, payload: errorMessage });\n  }\n};\n\nexport default sellerRegisterAction;\n"],"mappings":"AAAA,SAASA,qBAAqB,EAAEC,qBAAqB,EAAEC,qBAAqB,QAAQ,gBAAgB;AACpG,OAAOC,KAAK,MAAM,OAAO;AACzB,SAAQC,WAAW,QAAO,kBAAkB;AAE5C,MAAMC,oBAAoB,GAAIC,QAAQ;EAAA,IAAAC,EAAA,GAAAC,YAAA;EAAA,OAAAD,EAAA,CAAK,MAAOE,QAAQ,IAAK;IAAAF,EAAA;IAC7D,MAAMG,QAAQ,GAAGN,WAAW,CAAC,CAAC;IAC9B,IAAI;MACFK,QAAQ,CAAC;QAAEE,IAAI,EAAEX;MAAsB,CAAC,CAAC;MACzC,MAAMY,MAAM,GAAG;QACbC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB;MACF,CAAC;MAED,MAAMC,QAAQ,GAAG,MAAMX,KAAK,CAACY,IAAI,CAAC,8CAA8C,EAAET,QAAQ,EAAEM,MAAM,CAAC;MACnGH,QAAQ,CAAC;QAAEE,IAAI,EAAET;MAAsB,CAAC,CAAC;MACzCQ,QAAQ,CAAC,gBAAgB,CAAC;MAC1BM,OAAO,CAACC,GAAG,CAACH,QAAQ,CAACI,IAAI,CAACC,OAAO,CAAC;;MAElC;IAEF,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdJ,OAAO,CAACC,GAAG,CAAC,6BAA6B,EAAEG,KAAK,CAAC;MACjD,IAAIC,YAAY,GAAG,mBAAmB,CAAC,CAAC;;MAExC,IAAID,KAAK,CAACN,QAAQ,IAAIM,KAAK,CAACN,QAAQ,CAACI,IAAI,CAACE,KAAK,EAAE;QAC/CC,YAAY,GAAGD,KAAK,CAACN,QAAQ,CAACI,IAAI,CAACE,KAAK,CAAC,CAAC;MAC5C;;MAEAX,QAAQ,CAAC;QAAEE,IAAI,EAAEV,qBAAqB;QAAEqB,OAAO,EAAED;MAAa,CAAC,CAAC;IAClE;EACF,CAAC;IAAA,QA1BkBjB,WAAW;EAAA;AAAA,CA0B7B;AAED,eAAeC,oBAAoB"},"metadata":{},"sourceType":"module","externalDependencies":[]}