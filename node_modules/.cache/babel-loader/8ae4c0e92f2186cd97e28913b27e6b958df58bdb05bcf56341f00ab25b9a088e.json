{"ast":null,"code":"// verifyOtpAction.js\nimport { VERIFY_OTP_REQUEST, VERIFY_OTP_FAILURE, VERIFY_OTP_SUCCESS } from \"./action_types\";\nimport axios from 'axios';\nimport { navigate } from 'react-router-dom'; // Import the navigate function\n\nconst verifyOtpAction = (userEmail, otpValue) => async dispatch => {\n  try {\n    dispatch({\n      type: VERIFY_OTP_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-type': 'application/json'\n      }\n    };\n    const response = await axios.post(\"http://localhost:1213/user/verify-otp\", {\n      email: userEmail,\n      otp: otpValue\n    }, config);\n    dispatch({\n      type: VERIFY_OTP_SUCCESS,\n      payload: response\n    });\n\n    // Navigate to the \"/user-register\" route upon successful OTP verification\n    navigate(\"/user-register\");\n  } catch (error) {\n    console.log(\"Error response from server:\", error);\n    let errorMessage = \"An error occurred\"; // Default error message\n\n    if (error.response && error.response.data.error) {\n      errorMessage = error.response.data.error; // Use the error message from the server if available\n    }\n\n    dispatch({\n      type: VERIFY_OTP_FAILURE,\n      payload: errorMessage\n    });\n  }\n};\nexport default verifyOtpAction;","map":{"version":3,"names":["VERIFY_OTP_REQUEST","VERIFY_OTP_FAILURE","VERIFY_OTP_SUCCESS","axios","navigate","verifyOtpAction","userEmail","otpValue","dispatch","type","config","headers","response","post","email","otp","payload","error","console","log","errorMessage","data"],"sources":["/Users/apple/Documents/Ecommerce/client/src/actions/selller_register_actions.js"],"sourcesContent":["// verifyOtpAction.js\nimport { VERIFY_OTP_REQUEST, VERIFY_OTP_FAILURE, VERIFY_OTP_SUCCESS } from \"./action_types\";\nimport axios from 'axios';\nimport { navigate } from 'react-router-dom'; // Import the navigate function\n\nconst verifyOtpAction = (userEmail, otpValue) => async (dispatch) => {\n  try {\n    dispatch({ type: VERIFY_OTP_REQUEST });\n    const config = {\n      headers: {\n        'Content-type': 'application/json',\n      },\n    };\n\n    const response = await axios.post(\"http://localhost:1213/user/verify-otp\", {\n      email: userEmail,\n      otp: otpValue,\n    }, config);\n    \n    dispatch({ type: VERIFY_OTP_SUCCESS, payload: response });\n    \n    // Navigate to the \"/user-register\" route upon successful OTP verification\n    navigate(\"/user-register\");\n\n  } catch (error) {\n    console.log(\"Error response from server:\", error);\n    let errorMessage = \"An error occurred\"; // Default error message\n\n    if (error.response && error.response.data.error) {\n      errorMessage = error.response.data.error; // Use the error message from the server if available\n    }\n\n    dispatch({ type: VERIFY_OTP_FAILURE, payload: errorMessage });\n  }\n};\n\nexport default verifyOtpAction;\n"],"mappings":"AAAA;AACA,SAASA,kBAAkB,EAAEC,kBAAkB,EAAEC,kBAAkB,QAAQ,gBAAgB;AAC3F,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,kBAAkB,CAAC,CAAC;;AAE7C,MAAMC,eAAe,GAAGA,CAACC,SAAS,EAAEC,QAAQ,KAAK,MAAOC,QAAQ,IAAK;EACnE,IAAI;IACFA,QAAQ,CAAC;MAAEC,IAAI,EAAET;IAAmB,CAAC,CAAC;IACtC,MAAMU,MAAM,GAAG;MACbC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB;IACF,CAAC;IAED,MAAMC,QAAQ,GAAG,MAAMT,KAAK,CAACU,IAAI,CAAC,uCAAuC,EAAE;MACzEC,KAAK,EAAER,SAAS;MAChBS,GAAG,EAAER;IACP,CAAC,EAAEG,MAAM,CAAC;IAEVF,QAAQ,CAAC;MAAEC,IAAI,EAAEP,kBAAkB;MAAEc,OAAO,EAAEJ;IAAS,CAAC,CAAC;;IAEzD;IACAR,QAAQ,CAAC,gBAAgB,CAAC;EAE5B,CAAC,CAAC,OAAOa,KAAK,EAAE;IACdC,OAAO,CAACC,GAAG,CAAC,6BAA6B,EAAEF,KAAK,CAAC;IACjD,IAAIG,YAAY,GAAG,mBAAmB,CAAC,CAAC;;IAExC,IAAIH,KAAK,CAACL,QAAQ,IAAIK,KAAK,CAACL,QAAQ,CAACS,IAAI,CAACJ,KAAK,EAAE;MAC/CG,YAAY,GAAGH,KAAK,CAACL,QAAQ,CAACS,IAAI,CAACJ,KAAK,CAAC,CAAC;IAC5C;;IAEAT,QAAQ,CAAC;MAAEC,IAAI,EAAER,kBAAkB;MAAEe,OAAO,EAAEI;IAAa,CAAC,CAAC;EAC/D;AACF,CAAC;AAED,eAAef,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}