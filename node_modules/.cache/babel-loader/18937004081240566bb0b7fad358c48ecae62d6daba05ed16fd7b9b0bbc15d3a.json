{"ast":null,"code":"import { SEND_EMAIL_REQUEST, SEND_EMAIL_FAILURE, SEND_EMAIL_SUCCESS } from \"./action_types\";\nimport axios from 'axios';\nconst sendEmail = email => async dispatch => {\n  try {\n    dispatch({\n      type: SEND_EMAIL_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-type': 'application/json'\n      }\n    };\n    const response = await axios.post(\"http://localhost:1213/user/send-otp\", {\n      email\n    }, config);\n    dispatch({\n      type: SEND_EMAIL_SUCCESS,\n      payload: response\n    });\n    console.log(response.data.message);\n  } catch (error) {\n    console.log(\"Error response from server:\", error);\n    let errorMessage = \"An error occurred\"; // Default error message\n\n    if (error.response && error.response.data.error) {\n      errorMessage = error.response.data.error; // Use the error message from the server if available\n    }\n\n    dispatch({\n      type: SEND_EMAIL_FAILURE,\n      payload: errorMessage\n    });\n  }\n};\nexport default sendEmail;","map":{"version":3,"names":["SEND_EMAIL_REQUEST","SEND_EMAIL_FAILURE","SEND_EMAIL_SUCCESS","axios","sendEmail","email","dispatch","type","config","headers","response","post","payload","console","log","data","message","error","errorMessage"],"sources":["/Users/apple/Documents/Ecommerce/client/src/actions/send_email_actions.js"],"sourcesContent":["import { SEND_EMAIL_REQUEST, SEND_EMAIL_FAILURE, SEND_EMAIL_SUCCESS } from \"./action_types\";\nimport axios from 'axios';\n\nconst sendEmail = (email) => async (dispatch) => {\n  try {\n    dispatch({ type: SEND_EMAIL_REQUEST });\n    const config = {\n      headers: {\n        'Content-type': 'application/json',\n      },\n    };\n\n    const response = await axios.post(\"http://localhost:1213/user/send-otp\", { email }, config);\n    dispatch({ type: SEND_EMAIL_SUCCESS, payload: response });\n    console.log(response.data.message);\n  } catch (error) {\n    console.log(\"Error response from server:\", error);\n    let errorMessage = \"An error occurred\"; // Default error message\n\n    if (error.response && error.response.data.error) {\n      errorMessage = error.response.data.error; // Use the error message from the server if available\n    }\n\n    dispatch({ type: SEND_EMAIL_FAILURE, payload: errorMessage });\n  }\n};\n\nexport default sendEmail;"],"mappings":"AAAA,SAASA,kBAAkB,EAAEC,kBAAkB,EAAEC,kBAAkB,QAAQ,gBAAgB;AAC3F,OAAOC,KAAK,MAAM,OAAO;AAEzB,MAAMC,SAAS,GAAIC,KAAK,IAAK,MAAOC,QAAQ,IAAK;EAC/C,IAAI;IACFA,QAAQ,CAAC;MAAEC,IAAI,EAAEP;IAAmB,CAAC,CAAC;IACtC,MAAMQ,MAAM,GAAG;MACbC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB;IACF,CAAC;IAED,MAAMC,QAAQ,GAAG,MAAMP,KAAK,CAACQ,IAAI,CAAC,qCAAqC,EAAE;MAAEN;IAAM,CAAC,EAAEG,MAAM,CAAC;IAC3FF,QAAQ,CAAC;MAAEC,IAAI,EAAEL,kBAAkB;MAAEU,OAAO,EAAEF;IAAS,CAAC,CAAC;IACzDG,OAAO,CAACC,GAAG,CAACJ,QAAQ,CAACK,IAAI,CAACC,OAAO,CAAC;EACpC,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdJ,OAAO,CAACC,GAAG,CAAC,6BAA6B,EAAEG,KAAK,CAAC;IACjD,IAAIC,YAAY,GAAG,mBAAmB,CAAC,CAAC;;IAExC,IAAID,KAAK,CAACP,QAAQ,IAAIO,KAAK,CAACP,QAAQ,CAACK,IAAI,CAACE,KAAK,EAAE;MAC/CC,YAAY,GAAGD,KAAK,CAACP,QAAQ,CAACK,IAAI,CAACE,KAAK,CAAC,CAAC;IAC5C;;IAEAX,QAAQ,CAAC;MAAEC,IAAI,EAAEN,kBAAkB;MAAEW,OAAO,EAAEM;IAAa,CAAC,CAAC;EAC/D;AACF,CAAC;AAED,eAAed,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}