{"ast":null,"code":"import { VERIFY_OTP_REQUEST, VERIFY_OTP_FAILURE, VERIFY_OTP_SUCCESS } from \"./action_types\";\nimport axios from 'axios';\nimport { useNavigate } from \"reac\";\nconst verifyOtpAction = (email, otp) => {\n  var _s = $RefreshSig$();\n  return _s(async dispatch => {\n    _s();\n    const navigate = useNavigate();\n    try {\n      dispatch({\n        type: VERIFY_OTP_REQUEST\n      });\n      const config = {\n        headers: {\n          'Content-type': 'application/json'\n        }\n      };\n      const response = await axios.post(\"http://localhost:1213/user/verify-otp\", {\n        email: email,\n        otp: otp\n      }, config);\n      dispatch({\n        type: VERIFY_OTP_SUCCESS,\n        payload: response\n      });\n      navigate(\"/user-register\");\n      console.log(response);\n      return response; // You can return the response data if needed\n    } catch (error) {\n      console.log(\"Error response from server:\", error);\n      let errorMessage = \"An error occurred\"; // Default error message\n\n      if (error.response && error.response.data.error) {\n        errorMessage = error.response.data.error; // Use the error message from the server if available\n      }\n\n      dispatch({\n        type: VERIFY_OTP_FAILURE,\n        payload: errorMessage\n      });\n      throw error; // You can re-throw the error to handle it in your component\n    }\n  }, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n    return [useNavigate];\n  });\n};\nexport default verifyOtpAction;","map":{"version":3,"names":["VERIFY_OTP_REQUEST","VERIFY_OTP_FAILURE","VERIFY_OTP_SUCCESS","axios","useNavigate","verifyOtpAction","email","otp","_s","$RefreshSig$","dispatch","navigate","type","config","headers","response","post","payload","console","log","error","errorMessage","data"],"sources":["/Users/apple/Documents/Ecommerce/client/src/actions/verify_otp_action.js"],"sourcesContent":["import {\n    VERIFY_OTP_REQUEST,\n    VERIFY_OTP_FAILURE,\n    VERIFY_OTP_SUCCESS,\n  } from \"./action_types\";\n  import axios from 'axios';\n  import {useNavigate}from \"reac\"\n  \nconst verifyOtpAction = (email, otp) => async (dispatch) => {\nconst navigate = useNavigate()\n    try {\n      dispatch({ type: VERIFY_OTP_REQUEST });\n      const config = {\n        headers: {\n          'Content-type': 'application/json',\n        },\n      };\n  \n      const response = await axios.post(\"http://localhost:1213/user/verify-otp\", {\n        email: email,\n        otp: otp,\n      }, config);\n  \n      dispatch({ type: VERIFY_OTP_SUCCESS, payload: response });\n      navigate(\"/user-register\")\n      console.log(response);\n      return response; // You can return the response data if needed\n    } catch (error) {\n      console.log(\"Error response from server:\", error);\n      let errorMessage = \"An error occurred\"; // Default error message\n  \n      if (error.response && error.response.data.error) {\n        errorMessage = error.response.data.error; // Use the error message from the server if available\n      }\n  \n      dispatch({ type: VERIFY_OTP_FAILURE, payload: errorMessage });\n      throw error; // You can re-throw the error to handle it in your component\n    }\n  };\n\nexport default verifyOtpAction;"],"mappings":"AAAA,SACIA,kBAAkB,EAClBC,kBAAkB,EAClBC,kBAAkB,QACb,gBAAgB;AACvB,OAAOC,KAAK,MAAM,OAAO;AACzB,SAAQC,WAAW,QAAM,MAAM;AAEjC,MAAMC,eAAe,GAAGA,CAACC,KAAK,EAAEC,GAAG;EAAA,IAAAC,EAAA,GAAAC,YAAA;EAAA,OAAAD,EAAA,CAAK,MAAOE,QAAQ,IAAK;IAAAF,EAAA;IAC5D,MAAMG,QAAQ,GAAGP,WAAW,CAAC,CAAC;IAC1B,IAAI;MACFM,QAAQ,CAAC;QAAEE,IAAI,EAAEZ;MAAmB,CAAC,CAAC;MACtC,MAAMa,MAAM,GAAG;QACbC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB;MACF,CAAC;MAED,MAAMC,QAAQ,GAAG,MAAMZ,KAAK,CAACa,IAAI,CAAC,uCAAuC,EAAE;QACzEV,KAAK,EAAEA,KAAK;QACZC,GAAG,EAAEA;MACP,CAAC,EAAEM,MAAM,CAAC;MAEVH,QAAQ,CAAC;QAAEE,IAAI,EAAEV,kBAAkB;QAAEe,OAAO,EAAEF;MAAS,CAAC,CAAC;MACzDJ,QAAQ,CAAC,gBAAgB,CAAC;MAC1BO,OAAO,CAACC,GAAG,CAACJ,QAAQ,CAAC;MACrB,OAAOA,QAAQ,CAAC,CAAC;IACnB,CAAC,CAAC,OAAOK,KAAK,EAAE;MACdF,OAAO,CAACC,GAAG,CAAC,6BAA6B,EAAEC,KAAK,CAAC;MACjD,IAAIC,YAAY,GAAG,mBAAmB,CAAC,CAAC;;MAExC,IAAID,KAAK,CAACL,QAAQ,IAAIK,KAAK,CAACL,QAAQ,CAACO,IAAI,CAACF,KAAK,EAAE;QAC/CC,YAAY,GAAGD,KAAK,CAACL,QAAQ,CAACO,IAAI,CAACF,KAAK,CAAC,CAAC;MAC5C;;MAEAV,QAAQ,CAAC;QAAEE,IAAI,EAAEX,kBAAkB;QAAEgB,OAAO,EAAEI;MAAa,CAAC,CAAC;MAC7D,MAAMD,KAAK,CAAC,CAAC;IACf;EACF,CAAC;IAAA,QA7BchB,WAAW;EAAA;AAAA,CA6BzB;AAEH,eAAeC,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}